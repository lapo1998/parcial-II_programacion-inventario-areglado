
# Se importan las clases necesarias del proyecto para poder utilizarlas.
# La clase Biblioteca contiene la l√≥gica principal.
# La clase Libro se usa para crear nuevos objetos de libro.
from biblioteca import Biblioteca
from libro import Libro

def mostrar_menu():
    """
    Funci√≥n que imprime el men√∫ de opciones en la consola para guiar al usuario.
    Se utiliza para mantener el c√≥digo principal m√°s limpio y organizado.
    """
    print("\n" + "="*40)
    print("      SISTEMA DE GESTI√ìN DE BIBLIOTECA")
    print("="*40)
    print("1. A√±adir un libro")
    print("2. Quitar un libro")
    print("3. Registrar un nuevo usuario")
    print("4. Dar de baja un usuario")
    print("5. Prestar un libro")
    print("6. Devolver un libro")
    print("7. Buscar libros")
    print("8. Listar libros prestados a un usuario")
    print("9. Salir del programa")
    print("="*40)

def main():
    """
    Funci√≥n principal del programa. Aqu√≠ se crea el objeto de la biblioteca
    y se ejecuta el bucle que gestiona el men√∫ interactivo.
    """
    # Se crea una instancia de la clase Biblioteca.
    biblioteca = Biblioteca()
    
    # Se a√±aden algunos libros y usuarios de prueba para que el sistema tenga datos al iniciar.
    # Esto facilita la prueba de las dem√°s funcionalidades sin tener que a√±adir datos manualmente cada vez.
    biblioteca.anadir_libro(Libro("Inteligencia artificial", "√Ålvaro Montes", "Tecnolog√≠a", "ISBN_IA"))
    biblioteca.anadir_libro(Libro("El principito", "Antoine de Saint-Exup√©ry", "F√°bula", "978-0618053267"))
    biblioteca.anadir_libro(Libro("Huasipungo", "Jorge Icaza", "Novela", "ISBN_H"))
    biblioteca.anadir_libro(Libro("Siete tratados", "Juan Montalvo", "Ensayo", "ISBN_ST"))
    biblioteca.anadir_libro(Libro("El √°rbol del bien y del mal", "Medardo Angel Silva", "Poes√≠a", "ISBN_ABM"))
    
    # Se a√±aden algunos usuarios de prueba para las funcionalidades de pr√©stamos.
    manuel = biblioteca.registrar_usuario("Manuel Lapo")
    maribel = biblioteca.registrar_usuario("Maribel Salinas")
    
    # Bucle principal del programa. Se ejecuta indefinidamente hasta que el usuario decida salir (opci√≥n 9).
    while True:
        # Se muestra el men√∫ en cada iteraci√≥n del bucle.
        mostrar_menu()
        # Se solicita al usuario que ingrese una opci√≥n.
        opcion = input("‚û°Ô∏è  Seleccione una opci√≥n: ")

        # Se utiliza una estructura if-elif-else para manejar cada opci√≥n del men√∫.
        if opcion == '1':
            titulo = input("Ingrese el t√≠tulo del libro: ")
            autor = input("Ingrese el autor del libro: ")
            categoria = input("Ingrese la categor√≠a del libro: ")
            isbn = input("Ingrese el ISBN del libro: ")
            nuevo_libro = Libro(titulo, autor, categoria, isbn)
            # Se llama al m√©todo anadir_libro de la clase Biblioteca para a√±adir el libro.
            biblioteca.anadir_libro(nuevo_libro)
            
        elif opcion == '2':
            # Se solicita el ISBN del libro a quitar.
            isbn = input("Ingrese el ISBN del libro a quitar: ")
            # Se llama al m√©todo quitar_libro.
            biblioteca.quitar_libro(isbn)
            
        elif opcion == '3':
            # Se solicita el nombre del nuevo usuario.
            nombre = input("Ingrese el nombre del usuario a registrar: ")
            # Se llama al m√©todo registrar_usuario.
            biblioteca.registrar_usuario(nombre)

        elif opcion == '4':
            # Se usa un bloque try-except para manejar errores si el usuario ingresa un valor no num√©rico.
            try:
                id_usuario = int(input("Ingrese el ID del usuario a dar de baja: "))
                biblioteca.dar_de_baja_usuario(id_usuario)
            except ValueError:
                print("‚ùå Entrada no v√°lida. Por favor, ingrese un n√∫mero para el ID.")

        elif opcion == '5':
            try:
                id_usuario = int(input("Ingrese el ID del usuario: "))
                isbn = input("Ingrese el ISBN del libro a prestar: ")
                biblioteca.prestar_libro(id_usuario, isbn)
            except ValueError:
                print("‚ùå Entrada no v√°lida. Por favor, ingrese un n√∫mero para el ID.")

        elif opcion == '6':
            try:
                id_usuario = int(input("Ingrese el ID del usuario: "))
                isbn = input("Ingrese el ISBN del libro a devolver: ")
                biblioteca.devolver_libro(id_usuario, isbn)
            except ValueError:
                print("‚ùå Entrada no v√°lida. Por favor, ingrese un n√∫mero para el ID.")

        elif opcion == '7':
            query = input("Ingrese el t√©rmino de b√∫squeda: ")
            tipo = input("Buscar por (titulo, autor, categoria): ")
            resultados = biblioteca.buscar_libros(query, tipo)
            print("Resultados de la b√∫squeda:")
            if resultados:
                for libro in resultados:
                    print(f" - {libro}")
            else:
                print("No se encontraron resultados.")

        elif opcion == '8':
            try:
                id_usuario = int(input("Ingrese el ID del usuario para listar pr√©stamos: "))
                biblioteca.listar_libros_prestados(id_usuario)
            except ValueError:
                print("‚ùå Entrada no v√°lida. Por favor, ingrese un n√∫mero para el ID.")

        elif opcion == '9':
            # Si el usuario elige la opci√≥n 9, se rompe el bucle y el programa termina.
            print("üëã Saliendo del sistema...")
            break

        else:
            # Si la opci√≥n ingresada no es v√°lida, se muestra un mensaje de error.
            print("‚ùå Opci√≥n no v√°lida. Por favor, intente de nuevo.")

# Este es el punto de entrada del programa. El c√≥digo dentro de este bloque
# solo se ejecuta cuando el archivo main.py se corre directamente.
if __name__ == "__main__":
    main()